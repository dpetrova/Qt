#ifndef MANDELBROTCALCULATOR_H
#define MANDELBROTCALCULATOR_H

#include <QObject>
#include <QSize>
#include <QPointF>
#include <QElapsedTimer>
#include <QList>

#include "JobResult.h"

class Job;

class MandelbrotCalculator : public QObject
{
    Q_OBJECT
public:
    explicit MandelbrotCalculator(QObject *parent = 0);

signals:
    void pictureLinesGenerated(QList<JobResult> jobResults); //This signal is regularly triggered to dispatch results
    void abortAllJobs(); //abort all active jobs

public slots:
    void generatePicture(QSize areaSize, QPointF moveOffset, double scaleFactor, int iterationMax); //slot is used by the caller to request a new Mandelbrot picture (prepares and starts jobs)
    void process(JobResult jobResult); //handles results generated by the jobs

private:
    Job* createJob(int pixelPositionY); //helper function to create and configure a new job
    void clearJobs(); //This slot removes queued jobs and aborts active jobs

private:
    QPointF mMoveOffset;
    double mScaleFactor;
    QSize mAreaSize;
    int mIterationMax;
    int mReceivedJobResults; //count of the JobResult received
    QList<JobResult> mJobResults; //list that contains received JobResult
    QElapsedTimer mTimer; //calculates the elapsed time to run all jobs for a requested picture
};

#endif // MANDELBROTCALCULATOR_H
